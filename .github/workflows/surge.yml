# Sample workflow for building and deploying a site to Surge.sh
name: Deploy to Surge.sh

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ['master']

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: 'surge'
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3

      - name: Setup pnpm
        uses: pnpm/action-setup@v2.4.0
        with:
          version: latest

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Build artifacts
        run: pnpm run build

      - name: Archive artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist

  # Deployment job
  deploy:
    environment:
      name: surge
      url: https://swr-cheat-sheet.surge.sh
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist

      - name: Deploy to https://swr-cheat-sheet.surge.sh
        uses: dswistowski/surge-sh-action@v1
        with:
          domain: https://swr-cheat-sheet.surge.sh
          login: ${{ secrets.surge_login }}
          token: ${{ secrets.surge_token }}
